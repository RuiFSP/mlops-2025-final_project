name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync --extra dev

    - name: Run Ruff checks
      run: |
        # Run Ruff linter and formatter - replaces black, isort, flake8
        uv run ruff check src tests
        uv run ruff format --check src tests

    - name: Run type checking
      run: |
        uv run mypy src

    # Fast unit tests first - fail fast if basic functionality is broken
    - name: Run unit tests
      run: |
        uv run python -m pytest tests/unit/ -v --tb=short -q --cov=src --cov-report=xml
      timeout-minutes: 5

    # Integration tests with timeout - only if unit tests pass
    - name: Run integration tests
      run: |
        uv run python -m pytest tests/integration/ -v --tb=short -q --cov=src --cov-append --cov-report=xml
      timeout-minutes: 15

    # E2E tests only on main branch or when specifically requested
    - name: Run E2E tests
      if: github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, '[run-e2e]')
      run: |
        uv run python -m pytest tests/e2e/ -v --tb=short -q --cov=src --cov-append --cov-report=xml
      timeout-minutes: 30

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      continue-on-error: true
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t premier-league-predictor:latest .

    - name: Test Docker image
      run: |
        docker run --rm premier-league-predictor:latest --help
      timeout-minutes: 5
