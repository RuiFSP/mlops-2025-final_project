services:
  postgres:
    image: postgres:15
    container_name: postgres-mlops
    environment:
      POSTGRES_USER: mlops_user
      POSTGRES_PASSWORD: mlops_password
      POSTGRES_DB: mlops_db
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - mlops-network

  mlflow:
    image: python:3.10-slim
    container_name: mlflow-server
    working_dir: /app
    command: >
      sh -c "pip install mlflow &&
             mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri file:/mlruns --default-artifact-root file:/mlruns"
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    networks:
      - mlops-network

  prefect:
    image: prefecthq/prefect:2-latest
    container_name: prefect-server
    command: prefect server start --host 0.0.0.0 --port 4200
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://mlops_user:mlops_password@postgres:5432/mlops_db
    ports:
      - "4200:4200"
    depends_on:
      - postgres
    networks:
      - mlops-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - mlops-network

  training:
    build: .
    container_name: mlops-training
    volumes:
      - ./mlruns:/mlruns
    depends_on:
      - postgres
      - mlflow
    networks:
      - mlops-network





volumes:
  pg_data:
  grafana_data:

networks:
  mlops-network:
    driver: bridge 